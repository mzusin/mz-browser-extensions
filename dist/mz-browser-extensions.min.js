/* 
mz-browser-extensions v1.0.0
TypeScript-based library for managing browser extensions.
https://github.com/mzusin/mz-browser-extensions  
Copyright (c) 2023-present, Miriam Zusin          
*/
(()=>{var c=()=>new Promise((e,t)=>{try{chrome.tabs.query({active:!0,currentWindow:!0},r=>{if(!r||r.length<=0){t(null);return}e(r[0])})}catch(r){t(r)}}),s=e=>new Promise((t,r)=>{chrome.tabs.getZoom(e,o=>{t(o)})});var l=e=>new Promise((t,r)=>{try{chrome.storage.sync.get([e],o=>{if(!o||!o[e]){t(null);return}let n=JSON.parse(o[e]);t(n)})}catch(o){console.error(o),r(o)}}),i=e=>new Promise((t,r)=>{try{chrome.storage.local.get([e],o=>{if(!o||!o[e]){t(null);return}let n=JSON.parse(o[e]);t(n)})}catch(o){console.error(o),r(o)}}),m=()=>new Promise((e,t)=>{try{chrome.storage.sync.get(null,r=>{e(r)})}catch(r){console.error(r),t(r)}}),u=()=>new Promise((e,t)=>{try{chrome.storage.local.get(null,r=>{e(r)})}catch(r){console.error(r),t(r)}}),g=(e,t)=>new Promise((r,o)=>{try{let n=JSON.stringify(t);chrome.storage.sync.set({[e]:n},()=>{r()})}catch(n){console.error(n),o(n)}}),h=(e,t)=>new Promise((r,o)=>{try{let n=JSON.stringify(t);chrome.storage.local.set({[e]:n},()=>{r()})}catch(n){console.error(n),o(n)}}),x=e=>new Promise((t,r)=>{try{chrome.storage.sync.remove(e,()=>{t(null)})}catch(o){r(o)}}),y=e=>new Promise((t,r)=>{try{chrome.storage.local.remove(e,()=>{t(null)})}catch(o){r(o)}}),p=()=>new Promise((e,t)=>{try{chrome.storage.sync.clear(()=>{e(null)})}catch(r){t(r)}}),P=()=>new Promise((e,t)=>{try{chrome.storage.local.clear(()=>{e(null)})}catch(r){t(r)}});var T=e=>new Promise((t,r)=>{chrome.tabs.captureVisibleTab({format:e,quality:100},o=>{if(chrome.runtime.lastError){console.error(chrome.runtime.lastError),r(null);return}t(o)})});})();
