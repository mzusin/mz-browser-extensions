/* 
mz-browser-extensions v1.0.0
TypeScript-based library for managing browser extensions.
https://github.com/mzusin/mz-browser-extensions  
Copyright (c) 2023-present, Miriam Zusin          
*/
(()=>{var s=()=>new Promise((e,o)=>{try{chrome.tabs.query({active:!0,currentWindow:!0},t=>{if(!t||t.length<=0){o(null);return}e(t[0])})}catch(t){o(t)}});var a=e=>new Promise((o,t)=>{try{chrome.storage.sync.get([e],r=>{if(!r||!r[e]){o(null);return}let n=JSON.parse(r[e]);o(n)})}catch(r){console.error(r),t(r)}}),i=e=>new Promise((o,t)=>{try{chrome.storage.local.get([e],r=>{if(!r||!r[e]){o(null);return}let n=JSON.parse(r[e]);o(n)})}catch(r){console.error(r),t(r)}}),l=(e,o)=>new Promise((t,r)=>{try{let n=JSON.stringify(o);chrome.storage.sync.set({[e]:n},()=>{t()})}catch(n){console.error(n),r(n)}}),m=(e,o)=>new Promise((t,r)=>{try{let n=JSON.stringify(o);chrome.storage.local.set({[e]:n},()=>{t()})}catch(n){console.error(n),r(n)}}),u=e=>new Promise((o,t)=>{try{chrome.storage.sync.remove(e,()=>{o(null)})}catch(r){t(r)}}),g=e=>new Promise((o,t)=>{try{chrome.storage.local.remove(e,()=>{o(null)})}catch(r){t(r)}});var x=e=>new Promise((o,t)=>{chrome.tabs.captureVisibleTab({format:e,quality:100},r=>{if(chrome.runtime.lastError){console.error(chrome.runtime.lastError),t(null);return}o(r)})});})();
