/* 
mz-browser-extensions v1.0.0
TypeScript-based library for managing browser extensions.
https://github.com/mzusin/mz-browser-extensions  
Copyright (c) 2023-present, Miriam Zusin          
*/
(()=>{var c=()=>new Promise((r,t)=>{try{chrome.tabs.query({active:!0,currentWindow:!0},o=>{if(!o||o.length<=0){t(null);return}r(o[0])})}catch(o){t(o)}}),s=r=>new Promise((t,o)=>{chrome.tabs.getZoom(r,e=>{t(e)})});var l=r=>new Promise((t,o)=>{try{chrome.storage.sync.get([r],e=>{if(!e||!e[r]){t(null);return}let n=JSON.parse(e[r]);t(n)})}catch(e){console.error(e),o(e)}}),i=r=>new Promise((t,o)=>{try{chrome.storage.local.get([r],e=>{if(!e||!e[r]){t(null);return}let n=JSON.parse(e[r]);t(n)})}catch(e){console.error(e),o(e)}}),m=(r,t)=>new Promise((o,e)=>{try{let n=JSON.stringify(t);chrome.storage.sync.set({[r]:n},()=>{o()})}catch(n){console.error(n),e(n)}}),u=(r,t)=>new Promise((o,e)=>{try{let n=JSON.stringify(t);chrome.storage.local.set({[r]:n},()=>{o()})}catch(n){console.error(n),e(n)}}),g=r=>new Promise((t,o)=>{try{chrome.storage.sync.remove(r,()=>{t(null)})}catch(e){o(e)}}),h=r=>new Promise((t,o)=>{try{chrome.storage.local.remove(r,()=>{t(null)})}catch(e){o(e)}}),x=()=>new Promise((r,t)=>{try{chrome.storage.sync.clear(()=>{r(null)})}catch(o){t(o)}}),p=()=>new Promise((r,t)=>{try{chrome.storage.local.clear(()=>{r(null)})}catch(o){t(o)}});var y=r=>new Promise((t,o)=>{chrome.tabs.captureVisibleTab({format:r,quality:100},e=>{if(chrome.runtime.lastError){console.error(chrome.runtime.lastError),o(null);return}t(e)})});})();
