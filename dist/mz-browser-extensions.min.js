/* 
mz-browser-extensions v1.0.0
TypeScript-based library for managing browser extensions.
https://github.com/mzusin/mz-browser-extensions  
Copyright (c) 2023-present, Miriam Zusin          
*/
(()=>{var s=()=>new Promise((e,t)=>{try{chrome.tabs.query({active:!0,currentWindow:!0},o=>{if(!o||o.length<=0){t(null);return}e(o[0])})}catch(o){t(o)}}),c=e=>new Promise((t,o)=>{chrome.tabs.getZoom(e,r=>{t(r)})});var i=e=>new Promise((t,o)=>{try{chrome.storage.sync.get([e],r=>{if(!r||!r[e]){t(null);return}let n=JSON.parse(r[e]);t(n)})}catch(r){console.error(r),o(r)}}),m=e=>new Promise((t,o)=>{try{chrome.storage.local.get([e],r=>{if(!r||!r[e]){t(null);return}let n=JSON.parse(r[e]);t(n)})}catch(r){console.error(r),o(r)}}),l=(e,t)=>new Promise((o,r)=>{try{let n=JSON.stringify(t);chrome.storage.sync.set({[e]:n},()=>{o()})}catch(n){console.error(n),r(n)}}),u=(e,t)=>new Promise((o,r)=>{try{let n=JSON.stringify(t);chrome.storage.local.set({[e]:n},()=>{o()})}catch(n){console.error(n),r(n)}}),g=e=>new Promise((t,o)=>{try{chrome.storage.sync.remove(e,()=>{t(null)})}catch(r){o(r)}}),h=e=>new Promise((t,o)=>{try{chrome.storage.local.remove(e,()=>{t(null)})}catch(r){o(r)}});var p=e=>new Promise((t,o)=>{chrome.tabs.captureVisibleTab({format:e,quality:100},r=>{if(chrome.runtime.lastError){console.error(chrome.runtime.lastError),o(null);return}t(r)})});})();
